// DynMass.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <algorithm> // для std::swap. В C++11 используйте заголовок <utility>

using namespace std;
int CountNames; // Кол-во имён (Размер массива)

void SortMass(string* array) { //Сортировочка выбором (Всталяем наименьшие найденные значения в начало массива)
	// Перебираем каждый элемент массива (кроме последнего, он уже будет отсортирован к тому времени, когда мы до него доберемся)
	for (int startIndex = 0; startIndex < CountNames - 1; ++startIndex)
	{
		// В переменной smallestIndex хранится индекс наименьшего значения, которое мы нашли в этой итерации.
		// Начинаем с того, что наименьший элемент в этой итерации - это первый элемент (индекс 0)
		int smallestIndex = startIndex;

		// Затем ищем элемент поменьше в остальной части массива
		for (int currentIndex = startIndex + 1; currentIndex < CountNames; ++currentIndex)
		{
			// Если мы нашли элемент, который меньше нашего наименьшего элемента,
			if (array[currentIndex] < array[smallestIndex])
				// то запоминаем его
				smallestIndex = currentIndex;
		}

		// smallestIndex теперь наименьший элемент. 
				// Меняем местами наше начальное наименьшее число с тем, которое мы обнаружили
		std::swap(array[startIndex], array[smallestIndex]);
	}
}
int main()
{
	setlocale(LC_ALL, "rus");
    // std::cout << "Hello World!\n";
    //std::cout << "How many names would you like to enter? ";
	std::cout << "Введите количество имён: ";
	// Защита ввода от символов
	while (true) // цикл продолжается до тех пор, пока пользователь не введет корректное значение
	{
		cin >> CountNames;
		if (std::cin.fail()) // если предыдущее извлечение оказалось неудачным,
		{
			std::cin.clear(); // то возвращаем cin в 'обычный' режим работы
			std::cin.ignore(32767, '\n'); // и удаляем значения предыдущего ввода из входного буфера

		}
		else {
			break;
		}
		
	}
	// Защита ввода от символов
	cout << CountNames << endl;
    std::string* array = new std::string[CountNames];
    for (int i = 0; i < CountNames; i++) {
        cout << "Enter name #" << i+1 << ":";
        cin >> array[i];
    }
	SortMass(array);
	for (int i = 0; i < CountNames; i++) {
		cout << "Entered name #" << i + 1 << ":";
		cout << array[i] << endl;
	}

    delete[] array; // Чистим кучу за собой
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
